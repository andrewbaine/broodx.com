// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Point = require("./Point.bs.js");

function linearEquation(param) {
  var y2 = param[3];
  var x2 = param[2];
  var y1 = param[1];
  var x1 = param[0];
  if (x2 === x1) {
    var match = linearEquation([
          y1,
          x1,
          y2,
          x2
        ]);
    return [
            match[1],
            match[0],
            match[2]
          ];
  }
  var a = (y2 - y1) / (x2 - x1);
  var c = 0.5 * (y1 - a * x1 + y2 - a * x2);
  return [
          a,
          -1,
          c
        ];
}

function make(s1, s2) {
  var match = linearEquation(s1);
  var c1 = match[2];
  var b1 = match[1];
  var a1 = match[0];
  var match$1 = linearEquation(s2);
  var c2 = match$1[2];
  var b2 = match$1[1];
  var a2 = match$1[0];
  var d = a1 * b2 - a2 * b1;
  var dx = b1 * c2 - b2 * c1;
  var dy = c1 * a2 - c2 * a1;
  if (d === 0) {
    if (dx === 0 || dy === 0) {
      return /* InfinitelyManySolutions */1;
    } else {
      return /* None */0;
    }
  } else {
    return /* Point */{
            _0: Point.make(dx / d, dy / d)
          };
  }
}

exports.linearEquation = linearEquation;
exports.make = make;
/* No side effect */
